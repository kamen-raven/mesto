{"version":3,"sources":["webpack://yandex.praktikum/./src/utils/data.js","webpack://yandex.praktikum/./src/utils/constants.js","webpack://yandex.praktikum/./src/components/Card.js","webpack://yandex.praktikum/./src/components/FormValidator.js","webpack://yandex.praktikum/./src/components/Popup.js","webpack://yandex.praktikum/./src/components/PopupWithImage.js","webpack://yandex.praktikum/./src/components/PopupWithForm.js","webpack://yandex.praktikum/./src/components/PopupConfirm.js","webpack://yandex.praktikum/./src/components/UserInfo.js","webpack://yandex.praktikum/./src/components/Section.js","webpack://yandex.praktikum/./src/pages/index.js","webpack://yandex.praktikum/./src/components/Api.js"],"names":["validationClasses","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","templateCards","document","querySelector","cardsContainer","profileInfoForm","forms","profileInfo","profileTxtName","profileTxtAbout","profileAvatar","profileEditButtonOpen","cardAddOpen","avatarEditButton","popupProfileEdit","popupProfileForm","popupProfileTxtName","popupProfileTxtAbout","profileAvatarEdit","avatarEdit","avatarEditForm","addNewCardForm","popupCardAdd","popupCardAddForm","popupImageView","popupConfirmDelete","Card","data","curretUserId","templateElement","handleClickImage","handleClickLike","handleClickDelete","this","_name","name","_link","link","_likes","likes","_cardId","_id","_ownerId","owner","_curretUserId","_templateElement","_newCard","_getTemplate","_likeButton","_cardLikeCounter","_imageButton","_removeButton","_cardImage","_cardTitle","_handleClickImage","_handleClickLike","_isLiked","_handleClickDelete","content","cloneNode","remove","addEventListener","classList","contains","arrayLikes","textContent","length","some","like","add","_setEventListeners","_checkOwnerCard","setLikes","src","alt","FormValidator","validationSettings","popupForm","_validvalidationSettings","_popupForm","_inputList","querySelectorAll","_submitButton","inputElement","errorElement","id","errorMessage","validationMessage","validity","valid","_hideInputError","_showInputError","checkValid","removeAttribute","setAttribute","forEach","_checkInputValidity","_toggleButtonState","checkValidity","event","preventDefault","Popup","popupElement","_popupElement","_keyHandlerEsc","bind","_closeButton","removeEventListener","close","_closeByOverlay","target","key","PopupWithImage","_popupImageViewBigImage","_popupImageViewCaption","PopupWithForm","formName","handleFormSubmit","_handleFormSubmit","_form","_saveButton","_formValues","input","value","isLoad","reset","_getInputValues","closeWithReset","PopupConfirm","submitAction","_handleSubmiteCallback","UserInfo","profileName","profileAbout","_about","_avatar","trim","about","newProfileName","newProfileAbout","newProfileAvatar","Section","containerElement","renderer","_renderer","_containerElement","items","item","element","append","prepend","myUserId","api","address","token","cohortId","_address","_token","_cohortId","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","_returnRes","body","JSON","stringify","avatar","formValidationCardAdd","enableValidation","formValidationProfileEdit","formValidationAvatarEdit","userInfo","popupUserForm","setLoading","patchUserInfo","setUserInfo","catch","error","console","log","finally","setEventListeners","userInfoValue","getUserInfo","open","resetValidation","popupAvatarEdit","patchUserAvatar","setAvatar","popupWithImage","popupDelete","createCard","card","cardId","isLiked","deleteLike","lod","putLike","setSubmitAction","deleteCard","removeCard","createCards","cardList","appendItem","popupCardForm","postNewCard","newCard","prependItem","all","getUserData","getInitialCards","userValue","initialCards","renderItems"],"mappings":"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","file":"main.js","sourcesContent":["//селекторы для валидации форм\r\nexport const validationClasses = {\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__save-button',\r\n  inactiveButtonClass: 'popup__save-button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_active'\r\n}\r\n","//card-template\r\nexport const templateCards = document.querySelector('.template-cards');\r\n\r\n//cards\r\nexport const cardsContainer = document.querySelector('.cards');\r\n\r\n//profile\r\n//profile info content\r\n//нашли форму  profileInfo по ее имени (name) - profileInfo\r\nexport const profileInfoForm = document.forms.profileInfo;\r\n\r\nexport const profileTxtName = document.querySelector('.profile__title');\r\nexport const profileTxtAbout = document.querySelector('.profile__subtitle');\r\nexport const profileAvatar = document.querySelector('.profile__avatar');\r\n//profile buttons\r\nexport const profileEditButtonOpen = document.querySelector('.profile__edit-button');\r\nexport const cardAddOpen = document.querySelector('.profile__add-button');\r\nexport const avatarEditButton = document.querySelector('.profile__avatar-button');\r\n\r\n//popup profile-edit\r\nexport const popupProfileEdit = document.querySelector('.popup_profile-edit');\r\nexport const popupProfileForm = popupProfileEdit.querySelector('.popup__form_profile-edit');\r\nexport const popupProfileTxtName = popupProfileEdit.querySelector('.popup__input_profile-edit_name');\r\nexport const popupProfileTxtAbout = popupProfileEdit.querySelector('.popup__input_profile-edit_about');\r\n\r\n//popup avatar-edit\r\n//нашли форму  popup__form_avatar-edit по ее имени (name) - profileAvatarEdit\r\nexport const profileAvatarEdit = document.forms.profileAvatarEdit;\r\n\r\nexport const avatarEdit = document.querySelector('.popup_avatar-edit');\r\nexport const avatarEditForm = avatarEdit.querySelector('.popup__form_avatar-edit');\r\n\r\n//popup add-card\r\n//нашли форму  popupCardAdd по ее имени (name) - addNewCardForm\r\nexport const addNewCardForm = document.forms.addNewCardForm;\r\n\r\nexport const popupCardAdd = document.querySelector('.popup_card-add');\r\nexport const popupCardAddForm = popupCardAdd.querySelector('.popup__form_card-add');\r\n//popup image-view\r\nexport const popupImageView = document.querySelector('.popup_image-view');\r\n\r\n//popup delete card\r\nexport const popupConfirmDelete = document.querySelector('.popup_confirm-delete');\r\n\r\n","export default class Card {\r\n  constructor(data, curretUserId, { handleClickImage, handleClickLike, handleClickDelete }, templateElement) {\r\n    this._name = data.name;\r\n    this._link = data.link;\r\n    this._likes = data.likes;\r\n    this._cardId = data._id;\r\n    this._ownerId = data.owner._id;\r\n    this._curretUserId = curretUserId;\r\n    this._templateElement = templateElement;\r\n    this._newCard = this._getTemplate();\r\n    this._likeButton = this._newCard.querySelector('.card__like-button');\r\n    this._cardLikeCounter = this._newCard.querySelector('.card__like-counter');\r\n    this._imageButton = this._newCard.querySelector('.card__image-button');\r\n    this._removeButton = this._newCard.querySelector('.card__remove-button');\r\n    this._cardImage = this._newCard.querySelector('.card__image');\r\n    this._cardTitle = this._newCard.querySelector('.card__title');\r\n    this._handleClickImage = () => handleClickImage(this._name, this._link);\r\n    this._handleClickLike = () => handleClickLike(this._cardId, this._isLiked());\r\n    this._handleClickDelete = () => handleClickDelete(this._cardId);\r\n  }\r\n\r\n  //берем template карточки\r\n  _getTemplate() {\r\n    return this._templateElement\r\n      .content\r\n      .querySelector('.card')\r\n      .cloneNode(true);\r\n  }\r\n\r\n  _checkOwnerCard() {\r\n    if (this._curretUserId != this._ownerId) {\r\n      this._removeButton.remove()\r\n    }\r\n  }\r\n\r\n  //навешиваем слушатели событийнн\r\n  _setEventListeners() {\r\n    this._likeButton.addEventListener('click', this._handleClickLike);\r\n    this._imageButton.addEventListener('click', this._handleClickImage);\r\n    this._removeButton.addEventListener('click', this._handleClickDelete);\r\n  }\r\n\r\n  _isLiked() {\r\n    return this._likeButton.classList.contains('card__like-button_active');\r\n  }\r\n\r\n  //метод отображения количества лайков у карточки\r\n  setLikes(arrayLikes) {\r\n    this._likes = arrayLikes;\r\n    //отображаем количество лайков на странице\r\n    this._cardLikeCounter.textContent = this._likes.length;\r\n    //проверяем, есть ли лайки пользователя\r\n    const myLike = this._likes.some((like) => {\r\n      const likeId = like._id;\r\n      return likeId === this._curretUserId;\r\n    });\r\n    //устанавливаем отображение лайков, в зависимости от проверки\r\n    if (myLike) {\r\n      this._likeButton.classList.add('card__like-button_active')\r\n    } else {\r\n      this._likeButton.classList.remove('card__like-button_active')\r\n    }\r\n  }\r\n\r\n  //кнопка удаления карточки\r\n  removeCard() {\r\n    this._newCard.remove();\r\n    this._newCard = null;\r\n  }\r\n\r\n  //публичный метод создания карточки\r\n  createCards() {\r\n    this._setEventListeners();\r\n    this._checkOwnerCard();\r\n    this.setLikes(this._likes);\r\n    this._cardImage.src = this._link;\r\n    this._cardImage.alt = this._name;\r\n    this._cardTitle.textContent = this._name;\r\n    return this._newCard\r\n  }\r\n}\r\n","export default class FormValidator {\r\n  constructor(validationSettings, popupForm) {\r\n    this._validvalidationSettings = validationSettings;\r\n    this._popupForm = popupForm;\r\n    this._inputList = this._popupForm.querySelectorAll(this._validvalidationSettings.inputSelector);\r\n    this._submitButton = this._popupForm.querySelector(this._validvalidationSettings.submitButtonSelector);\r\n  }\r\n\r\n  //показать ошибку\r\n  _showInputError(inputElement) {\r\n    const errorElement = this._popupForm.querySelector(`#${inputElement.id}-error`);\r\n    const errorMessage = inputElement.validationMessage;\r\n    inputElement.classList.add(this._validvalidationSettings.inputErrorClass);\r\n    errorElement.classList.add(this._validvalidationSettings.errorClass);\r\n    errorElement.textContent = errorMessage;\r\n  }\r\n\r\n  //спрятать ошибку\r\n  _hideInputError(inputElement) {\r\n    const errorElement = this._popupForm.querySelector(`#${inputElement.id}-error`);\r\n    inputElement.classList.remove(this._validvalidationSettings.inputErrorClass);\r\n    errorElement.classList.remove(this._validvalidationSettings.errorClass);\r\n    errorElement.textContent = \"\";\r\n  }\r\n\r\n  //проверка на валидность\r\n  _checkInputValidity(inputElement) {\r\n    const notValidInput = !inputElement.validity.valid;\r\n    if (notValidInput) {\r\n      this._showInputError(inputElement);\r\n    } else {\r\n      this._hideInputError(inputElement);\r\n    }\r\n  }\r\n\r\n  //изменение состояния кнопки\r\n  _toggleButtonState(checkValid) {\r\n    if (checkValid) {\r\n      this._submitButton.classList.remove(this._validvalidationSettings.inactiveButtonClass);\r\n      this._submitButton.removeAttribute('disabled');\r\n    } else {\r\n      this._submitButton.classList.add(this._validvalidationSettings.inactiveButtonClass);\r\n      this._submitButton.setAttribute('disabled', true);\r\n    }\r\n  }\r\n\r\n  //слушатели\r\n  _setEventListeners() {\r\n    this._inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        this._checkInputValidity(inputElement);\r\n        this._toggleButtonState(this._popupForm.checkValidity());\r\n      });\r\n    });\r\n  }\r\n\r\n  //сброс валидации\r\n  resetValidation() {\r\n    this._inputList.forEach((inputElement) => {\r\n      this._hideInputError(inputElement);\r\n      this._toggleButtonState(this._popupForm.checkValidity());\r\n    });\r\n  }\r\n\r\n  //запускаем валидацию\r\n  enableValidation() {\r\n    this._setEventListeners();\r\n    this._popupForm.addEventListener('submit', (event) => {\r\n      event.preventDefault();  //не отправляем форму\r\n    });\r\n  }\r\n};\r\n","export default class Popup {\r\n  constructor(popupElement) {\r\n    this._popupElement = popupElement;\r\n    this._keyHandlerEsc = this._keyHandlerEsc.bind(this);\r\n    this._closeButton = this._popupElement.querySelector('.popup__close-button');\r\n  }\r\n\r\n  //открытие\r\n  open() {\r\n    this._popupElement.classList.add('popup_opened');\r\n    document.addEventListener('keydown', this._keyHandlerEsc);\r\n  }\r\n\r\n  //закрытие\r\n  close() {\r\n    this._popupElement.classList.remove('popup_opened');\r\n    document.removeEventListener('keydown', this._keyHandlerEsc);\r\n  }\r\n\r\n  //навешиваем слушатели\r\n  setEventListeners() {\r\n    this._closeButton.addEventListener('click', () => {\r\n      this.close();\r\n    });\r\n    this._popupElement.addEventListener('mousedown', (event) => {\r\n      this._closeByOverlay(event);\r\n    });\r\n  }\r\n\r\n  _closeByOverlay(event) {\r\n    const clicked = event.target;\r\n    if (clicked.classList.contains('popup')) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  _keyHandlerEsc(event) {\r\n    if (event.key === 'Escape') {\r\n      this.close();\r\n    }\r\n  }\r\n}\r\n","import Popup from './Popup.js';\r\n\r\nexport default class PopupWithImage extends Popup {\r\n  constructor(popupElement) {\r\n    super(popupElement);\r\n    this._popupImageViewBigImage = this._popupElement.querySelector('.popup__figure-img');\r\n    this._popupImageViewCaption = this._popupElement.querySelector('.popup__figure-caption');\r\n  }\r\n\r\n  open(name, link) {\r\n    super.open();\r\n    this._popupImageViewBigImage.src = link;\r\n    this._popupImageViewBigImage.alt = name;\r\n    this._popupImageViewCaption.textContent = name;\r\n  }\r\n}\r\n\r\n","import Popup from './Popup.js';\r\n\r\nexport default class PopupWithForm extends Popup {\r\n  constructor(popupElement, { handleFormSubmit }, formName) {\r\n    super(popupElement);\r\n    this._handleFormSubmit = handleFormSubmit;\r\n    this._form = formName;\r\n    this._saveButton = this._popupElement.querySelector('.popup__save-button');\r\n    this._inputList = this._popupElement.querySelectorAll('.popup__input');\r\n  }\r\n\r\n  _getInputValues() {\r\n    this._formValues = {};\r\n    this._inputList.forEach((input) => {\r\n      this._formValues[input.name] = input.value\r\n    });\r\n    return this._formValues;\r\n  }\r\n\r\n  setLoading(isLoad) {\r\n    if (isLoad) {\r\n      this._saveButton.textContent = \"Сохранение...\";\r\n    } else {\r\n      this._saveButton.textContent = \"Сохранить\";\r\n    }\r\n  }\r\n\r\n  closeWithReset() {\r\n    super.close();\r\n    this._form.reset();\r\n  }\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    this._popupElement.addEventListener('submit', () => {\r\n      this._handleFormSubmit(this._getInputValues());\r\n      this.closeWithReset();\r\n    });\r\n  }\r\n}\r\n\r\n","import Popup from './Popup.js';\r\n\r\nexport default class PopupConfirm extends Popup {\r\n  constructor(popupElement) {\r\n    super(popupElement);\r\n  }\r\n\r\n  setSubmitAction(submitAction) {\r\n    this._handleSubmiteCallback = submitAction;\r\n  }\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    this._popupElement.addEventListener('submit', (event) => {\r\n      event.preventDefault();\r\n      this._handleSubmiteCallback();\r\n    });\r\n  }\r\n}\r\n\r\n","export default class UserInfo {\r\n  constructor(profileName, profileAbout, profileAvatar) {\r\n    this._name = profileName;\r\n    this._about = profileAbout;\r\n    this._avatar = profileAvatar;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return {\r\n      name: this._name.textContent.trim(),\r\n      about: this._about.textContent.trim()\r\n    }\r\n  }\r\n\r\n  setUserInfo(newProfileName, newProfileAbout) {\r\n    this._name.textContent = newProfileName;\r\n    this._about.textContent = newProfileAbout;\r\n  }\r\n\r\n  //метод для редактирования аватара\r\n  setAvatar(newProfileAvatar) {\r\n    this._avatar.src = newProfileAvatar;\r\n  }\r\n}\r\n\r\n","export default class Section {\r\n  constructor({ renderer }, containerElement) {\r\n    this._renderer = renderer;\r\n    this._containerElement = containerElement;\r\n  }\r\n\r\n  renderItems(items) {\r\n    items.forEach((item) => {\r\n      this._renderer(item)\r\n    });\r\n  }\r\n\r\n  appendItem(element) {\r\n    this._containerElement.append(element);\r\n  }\r\n\r\n  prependItem(element) {\r\n    this._containerElement.prepend(element);\r\n  }\r\n}\r\n\r\n","//--------------ИМПОРТ\r\nimport './index.css'; // импорт css-стилей\r\n\r\nimport { validationClasses } from '../utils/data.js';\r\nimport {\r\n  templateCards,\r\n  cardsContainer,\r\n  profileInfoForm,\r\n  profileTxtName,\r\n  profileTxtAbout,\r\n  profileAvatar,\r\n  profileEditButtonOpen,\r\n  cardAddOpen,\r\n  avatarEditButton,\r\n  popupProfileEdit,\r\n  popupProfileForm,\r\n  popupProfileTxtName,\r\n  popupProfileTxtAbout,\r\n  profileAvatarEdit,\r\n  avatarEdit,\r\n  avatarEditForm,\r\n  addNewCardForm,\r\n  popupCardAdd,\r\n  popupCardAddForm,\r\n  popupImageView,\r\n  popupConfirmDelete\r\n} from '../utils/constants.js';\r\n\r\nimport Card from '../components/Card.js';\r\nimport FormValidator from '../components/FormValidator.js';\r\nimport PopupWithImage from '../components/PopupWithImage.js';\r\nimport PopupWithForm from '../components/PopupWithForm.js';\r\nimport PopupConfirm from '../components/PopupConfirm.js';\r\nimport UserInfo from '../components/UserInfo.js';\r\nimport Section from '../components/Section.js';\r\nimport Api from '../components/Api.js';\r\n\r\n//контейнер для хранения ID текущего пользователя\r\nlet myUserId = \"\";\r\n\r\n//-----ИНИЦИАЛИЗАЦИЯ КЛАССА API\r\nconst api = new Api({\r\n  address: 'https://mesto.nomoreparties.co',\r\n  token: '39cff778-54be-45db-8f91-d96bf9b92859',\r\n  cohortId: 'cohort-19'\r\n});\r\n\r\n\r\n//--------------ИНИЦИАЛИЗАЦИЯ КЛАССОВ ВАЛИДАЦИИ ФОРМ\r\n//валидация формы добавления карточки\r\nconst formValidationCardAdd = new FormValidator(validationClasses, popupCardAddForm);\r\nformValidationCardAdd.enableValidation();\r\n\r\n//валидация формы профиля\r\nconst formValidationProfileEdit = new FormValidator(validationClasses, popupProfileForm);\r\nformValidationProfileEdit.enableValidation();\r\n\r\n//валидация формы редактирования аватара\r\nconst formValidationAvatarEdit = new FormValidator(validationClasses, avatarEditForm);\r\nformValidationAvatarEdit.enableValidation();\r\n\r\n\r\n//--------------ИНИЦИАЛИЗАЦИЯ КЛАССА ПРОФИЛЯ\r\nconst userInfo = new UserInfo(profileTxtName, profileTxtAbout, profileAvatar);\r\n\r\n\r\n//создаем popup редактирования профиля\r\nconst popupUserForm = new PopupWithForm(\r\n  popupProfileEdit, {\r\n  handleFormSubmit: (data) => {\r\n    popupUserForm.setLoading(true);\r\n    api.patchUserInfo(data)\r\n      .then((data) => {\r\n        const newProfileName = data.name;\r\n        const newProfileAbout = data.about;\r\n        userInfo.setUserInfo(newProfileName, newProfileAbout);\r\n        popupUserForm.closeWithReset();\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Хьюстон, у нас проблема при редактировании инфомрации профиля: ${error}`)\r\n      })\r\n      .finally(() => {\r\n        popupUserForm.setLoading(false);\r\n      })\r\n  }\r\n},\r\n  profileInfoForm\r\n);\r\npopupUserForm.setEventListeners();\r\n\r\n//ФУНКЦИЯ ОТКРЫТИЯ ПОПАПА РЕДАКТИРОВАНИЯ ПРОФИЛЯ\r\nprofileEditButtonOpen.addEventListener('click', () => {\r\n  const userInfoValue = userInfo.getUserInfo();\r\n  //loadProfileInfo\r\n  popupProfileTxtName.value = userInfoValue.name;\r\n  popupProfileTxtAbout.value = userInfoValue.about;\r\n  //End\r\n  popupUserForm.open();\r\n  formValidationProfileEdit.resetValidation();\r\n});\r\n\r\n\r\n//создаем popup редактирования аватара\r\nconst popupAvatarEdit = new PopupWithForm(\r\n  avatarEdit, {\r\n  handleFormSubmit: (data) => {\r\n    popupAvatarEdit.setLoading(true);\r\n    api.patchUserAvatar(data)\r\n      .then((data) => {\r\n        userInfo.setAvatar(data.avatar)\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Хьюстон, у нас проблема при редактировании аватара: ${error}`)\r\n      })\r\n      .finally(() => {\r\n        popupAvatarEdit.setLoading(false);\r\n      })\r\n  }\r\n},\r\n  profileAvatarEdit\r\n);\r\npopupAvatarEdit.setEventListeners();\r\n\r\n//слушатель кнопки редактирования аватара\r\navatarEditButton.addEventListener('click', () => {\r\n  popupAvatarEdit.closeWithReset();\r\n  popupAvatarEdit.open();\r\n  formValidationAvatarEdit.resetValidation();\r\n});\r\n\r\n\r\n\r\n//создаем popup просмотра карточек\r\nconst popupWithImage = new PopupWithImage(popupImageView);\r\npopupWithImage.setEventListeners();\r\n\r\n//создаем popup подтверждения удаления\r\nconst popupDelete = new PopupConfirm(popupConfirmDelete);\r\npopupDelete.setEventListeners();\r\n\r\n\r\n//создаем функцию инициализации карточки\r\nconst createCard = (item, curretUserId) => {\r\n  const card = new Card(\r\n    item,\r\n    curretUserId,\r\n    {\r\n      handleClickImage: () => {\r\n        popupWithImage.open(item.name, item.link);\r\n      },\r\n      handleClickLike: (cardId, isLiked) => {\r\n        if (isLiked) {\r\n          api.deleteLike(cardId)\r\n            .then((data) => {\r\n              card.setLikes(data.likes)\r\n            })\r\n            .catch((error) => {\r\n              console.lod(`Хьюстон, у нас проблема при снятии лайка с карточки: ${error}`)\r\n            })\r\n        } else {\r\n          api.putLike(cardId)\r\n            .then((data) => {\r\n              card.setLikes(data.likes)\r\n            })\r\n            .catch((error) => {\r\n              console.log(`Хьюстон, у нас проблема при лайке карточки: ${error}`)\r\n            })\r\n        }\r\n      },\r\n      handleClickDelete: (cardId) => {\r\n        popupDelete.setSubmitAction(() => {\r\n          api.deleteCard(cardId)\r\n            .then(() => {\r\n              card.removeCard();\r\n              popupDelete.close();\r\n            })\r\n            .catch((error) => {\r\n              console.log(`Хьюстон, у нас проблема при удалении карточки: ${error}`)\r\n            })\r\n        }),\r\n          popupDelete.open();\r\n      }\r\n    },\r\n    templateCards //'.template-cards'\r\n  );\r\n  return card.createCards();\r\n};\r\n\r\n//создаем класс Section\r\nconst cardList = new Section({\r\n  renderer: (item) => {\r\n    const card = createCard(item, myUserId);\r\n    cardList.appendItem(card);\r\n  }\r\n},\r\n  cardsContainer//'.cards'\r\n);\r\n\r\n\r\n//создаем popup добавления карточек\r\nconst popupCardForm = new PopupWithForm(\r\n  popupCardAdd, {\r\n  handleFormSubmit: (data) => {\r\n    popupCardForm.setLoading(true);\r\n    api.postNewCard(data)\r\n      .then((data) => {\r\n        const newCard = createCard(data, myUserId);\r\n        cardList.prependItem(newCard);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Хьюстон, у нас проблема при добавлении новой карточки: ${error}`)\r\n      })\r\n      .finally(() => {\r\n        popupCardForm.setLoading(false);\r\n      })\r\n  }\r\n},\r\n  addNewCardForm\r\n);\r\npopupCardForm.setEventListeners();\r\n\r\n//card-add события кнопок добавления карточек\r\ncardAddOpen.addEventListener('click', () => {\r\n  popupCardForm.closeWithReset();\r\n  popupCardForm.open();\r\n  formValidationCardAdd.resetValidation();\r\n});\r\n\r\n\r\n\r\n//первоначальная загрузка информации с сервера\r\nPromise.all([\r\n  api.getUserData(),\r\n  api.getInitialCards()\r\n])\r\n  .then(([userValue, initialCards]) => {\r\n    myUserId = userValue._id;\r\n    userInfo.setUserInfo(userValue.name, userValue.about);\r\n    userInfo.setAvatar(userValue.avatar);\r\n    cardList.renderItems(initialCards);\r\n  })\r\n  .catch((error) => {\r\n    console.log(`Хьюстон, у нас проблема при загрузке первоначальной информации: ${error}`)\r\n  });\r\n","export default class Api {\r\n  constructor({ address, token, cohortId }) {\r\n    this._address = address;\r\n    this._token = token;\r\n    this._cohortId = cohortId;\r\n  }\r\n\r\n  //возвращаем res\r\n  _returnRes(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`ошибка ${res.status}`);\r\n  }\r\n\r\n  //--------запросы к данным пользователя\r\n  //запрос данных пользователя\r\n  getUserData() {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n\r\n  //запрос на обновление данных пользователя\r\n  patchUserInfo(data) {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n\r\n  //запрос на обновление аватара пользователя\r\n  patchUserAvatar(data) {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n\r\n  //---------запросы к карточкам\r\n  //запрос массива карточек\r\n  getInitialCards() {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/cards `, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n\r\n  //запрос добавления новой карточки\r\n  postNewCard(data) {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      })\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n\r\n  //запрос на удаление карточки\r\n  deleteCard(id) {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n\r\n  //-----запросы к лайкам карточек\r\n  //запрос на постановку лайка карточки\r\n  putLike(id) {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n\r\n  //запрос на удаление лайка карточки\r\n  deleteLike(id) {\r\n    return fetch(`${this._address}/v1/${this._cohortId}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    })\r\n      .then(this._returnRes)\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}